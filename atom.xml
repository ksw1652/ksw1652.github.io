<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>gamjamanduu의 블로그</title>
  
  <subtitle>gamjamanduu의 블로그</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-11T16:47:18.967Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>gamjamanduu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Front-End Interview Question - CSS Question</title>
    <link href="http://yoursite.com/2018/08/08/front-end-interview-css-question/"/>
    <id>http://yoursite.com/2018/08/08/front-end-interview-css-question/</id>
    <published>2018-08-08T07:47:00.000Z</published>
    <updated>2018-08-11T16:47:18.967Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p><blockquote><p><strong>class와 id의 차이점에 관해서 설명해주세요.</strong></p></blockquote><ul><li><strong>id 선택자와 class 선택자의 차이는 문서 안의 ‘복수’의 요소에 스타일을 적용하는 것인가 아니면 ‘유일’한 요소에 스타일을 적용하는 것인가입니다.<br><br>결론적으로 말하면 id는 ‘유일’한 요소에 적용, class는 ‘복수’의 요소에 적용할 수 있습니다.</strong></li></ul><blockquote><p>“reset” CSS가 무엇인지, 어떻게 유용한지 설명해주세요.</p></blockquote><ul><li><strong>각 브라우저는 본인만의 기본 스타일이 지정되어있습니다.<br><br>이 때문에 개발자가 명세한 스타일이 깨지는 경우가 있는데, 이를 방지하고 브라우저마다 공통된 스타일을 적용하기 위하여 사용합니다.</strong></li></ul><blockquote><p>float가 어떻게 동작하는지 설명해주세요.</p></blockquote><ul><li><strong>float은 ‘뜨다’라는 의미로 보통 CSS 상에서 정렬하기 위해 사용되는 속성입니다.<br><br>일반적인 블락(Block)요소는 기본값으로 width:100%; 의 값을 가지는데 플롯 속성이 선언되면,<br><br>좌측 혹은 우측에 다른 요소를 배치하기 위해 자신의 너비를 최소화 하게 됩니다.<br><br>예를 들어 리스트 레이아웃과 같이 좌측 혹은 우측에 이미지를 배치하고 나머지 영역에 텍스트를 보여줄 때,<br><br>이미지태그에 float:left;, float:right;를 사용하게 되면 이미지는 지정한 방향으로 정렬되고, <br><br>텍스트 영역이 나머지 부분을 차지하게 됩니다. <br><br>이때 텍스트에 margin이나 높이갚을 지정 할 수 없는데 텍스트 영역에 float을 지정하지 않았기 때문입니다.<br><br>이를 위해 overflow:hidden; 을 지정하여 주면 원하는 높이와 margin or padding을 지정 할 수 있습니다.</strong></li></ul><blockquote><p>z-index에 관해 설명해주세요.</p></blockquote><ul><li><strong>z-index는 겹치는 요소들간에 어떤 것을 상위에 표시할 것인지에 대한 명시값입니다.<br><br>z-index 를 사용하기 위해서는 기억해야할 3가지 사항이 있습니다.<br><br>우선 z-index 값을 지정하기 위해서는 해당 요소의 position 속성이 relative, absolute, fixed 중 하나여야만 합니다.<br><br>포지션 값이 지정되지 않으면 해당 요소들은 z-index:0; 처럼 동작합니다.<br><br>두 번째로 z-index의 값은 같은 depth의 요소끼리 비교하는 것이 원칙입니다.<br><br>같은 depth에서 하위로 자식 엘리먼트가 있는경우, 이는 z-index의 고려대상이 되지 않습니다.<br><br>마지막으로 z-index의 기본값은 auto이며, 이 경우 브라우저는 그 요소를 제쳐두고 자식 요소의 z-index 값을 비교대상으로 삼습니다.<br><br><br><a href="http://dev.epiloum.net/904" target="_blank" rel="noopener">참조 링크:퀴즈로 풀어보는 CSS z-index 속성의 3가지 포인트</a></strong></li></ul><blockquote><p>BFC(Block Formatting Context)에 관해 설명해주세요</p></blockquote><ul><li><strong>Bock Formatting context는 다음 조건중 하나 이상을 만족하는 HTML BOX입니다.<br><br></strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. float 값은 none이 아닙니다.</span><br><span class="line">2. position의 값은 static도 relative도 아닙니다.</span><br><span class="line">3. display 값은 table-cell, table-caption, inline-block, flex 또는 inline-flex입니다.</span><br><span class="line">4. 오버플로 값은 표시되지 않습니다.</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>클리어링(Clearing) 기술에는 어떤 것들이 있으며, 어떨 때 어떻게 사용하는 것이 적절한지 설명하세요.</p></blockquote><blockquote><p>CSS 스프라이트(CSS Sprites)를 설명하고, 페이지나 사이트를 어떻게 향상하는지 설명하세요.</p></blockquote><blockquote><p>Image Replacement를 사용해야 할 때, 선호하는 기술과 언제 사용하는지를 설명해주세요.</p></blockquote><blockquote><p>브라우저 스펙 차이에 따른 스타일링 이슈를 수정하기 위해서 어떻게 접근하나요?</p></blockquote><blockquote><p>기능이 제약된 브라우저를 위해서 어떤 방식으로 페이지를 만드나요?</p></blockquote><blockquote><p>어떠한 기술과 절차를 거치는지 설명하세요.</p></blockquote><blockquote><p>시각적으로 보이지 않고 스크린 리더에서만 가능하게 하는 방법에 관해 설명해주세요.</p></blockquote><blockquote><p>그리드 시스템(Grid system)을 사용한 적이 있나요? 있다면 어떠한 것을 선호하나요?</p></blockquote><blockquote><p>미디어 쿼리(media queries)를 사용한 적이 있나요? 혹은 모바일에 맞는 layout과 CSS를 사용한 적이 있나요?</p></blockquote><blockquote><p>SVG를 스타일링하는데 익숙하신가요?</p></blockquote><blockquote><p>인쇄하기 위해 웹페이지를 어떻게 최적화 하나요?</p></blockquote><blockquote><p>효율적인 CSS를 작성하기 위한 “비법(gotchas)”은 어떤 게 있나요?</p></blockquote><blockquote><p>CSS 전처리(CSS preprocessors)를 사용해보셨나요?</p></blockquote><blockquote><p>그렇다면, 사용 경험에 기반을 둬 좋았던 점과 나빴던 점을 설명해주세요.</p></blockquote><blockquote><p>페이지에서 표준 폰트가 아닌 폰트 디자인을 사용할 때 어떤 방식으로 처리하시나요? (웹폰트를 제외하고)</p></blockquote><blockquote><p>CSS Selector가 어떠한 원리로 동작하는지 설명해주세요.</p></blockquote><blockquote><p>pseudo-elements에 관해서 설명하고 어디에서 사용되는지 이야기해보세요.</p></blockquote><blockquote><p>box model에 관해 설명하고 브라우저에서 어떻게 동작하는지 설명해주세요.</p></blockquote><blockquote><ul><li>{ box-sizing: border-box; }은 무엇이고 사용했을때 이점은 무엇인가요?</li></ul></blockquote><blockquote><p>기억나는 display 속성에 대한 값들을 나열해보세요.</p></blockquote><blockquote><p>inline과 inline-block의 차이점은 무엇인가요?</p></blockquote><blockquote><p>요소를 배치하는 방법(relative, fixed, absolute, static) 간의 차이는 무엇인가요?</p></blockquote><blockquote><p>CSS에서 ‘C’는 Cascading을 의미합니다. Cascading에 관해서 설명해주세요. 또 cascading system의 장점은 무엇인가요?</p></blockquote><blockquote><p>CSS framework를 사용해본 적이 있으신가요? 실무에서 사용해보았다면 어떤 이점이 있었나요?</p></blockquote><blockquote><p>새로운 CSS Flexbox 혹은 Grid 스펙을 사용해 보신 적 있나요?</p></blockquote><blockquote><p>반응형(Responsive) 디자인은 적응형(Adaptive) 디자인과 어떤 차이점이 있나요?</p></blockquote><blockquote><p>레티나 그래픽 환경에서 작업해 보신 적이 있나요? 하셨다면 어떤 기술을 사용하셨나요?</p></blockquote><blockquote><p>절대 좌표대신 translate() 혹은 반대로 사용하는 이유가 있나요? 있다면 이유에 관해서 설명해주세요.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;휴가를 다녀온 뒤 오랜만에 포스트를 올린다.&lt;br&gt;이전의 HTML 질문편에 이어서 CSS관련 인터뷰 질문을 올려본다.&lt;br&gt;
    
    </summary>
    
      <category term="인터뷰 문제은행" scheme="http://yoursite.com/categories/%EC%9D%B8%ED%84%B0%EB%B7%B0-%EB%AC%B8%EC%A0%9C%EC%9D%80%ED%96%89/"/>
    
    
      <category term="FrontEnd" scheme="http://yoursite.com/tags/FrontEnd/"/>
    
      <category term="Interview" scheme="http://yoursite.com/tags/Interview/"/>
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="Question" scheme="http://yoursite.com/tags/Question/"/>
    
  </entry>
  
  <entry>
    <title>Front-End Interview Question - HTML Question</title>
    <link href="http://yoursite.com/2018/08/02/front-end-interview-html-question/"/>
    <id>http://yoursite.com/2018/08/02/front-end-interview-html-question/</id>
    <published>2018-08-02T08:13:00.000Z</published>
    <updated>2018-08-11T16:46:42.771Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p><blockquote><p><strong>doctype이 무엇을 하는 것인가요?</strong></p></blockquote><ul><li><strong>HTML의 버전을 명시하는 태그 입니다.</strong></li></ul><blockquote><p><strong>표준모드(standards mode)와 쿽스모드(quirks mode)의 다른 점은 무엇인가요?</strong></p></blockquote><ul><li><strong>브라우저가 출력하고자 하는 문서가 최신이라고 판단하면 표준모드(standard mode)로 렌더링 합니다.<br><br>반면 브라우저가 예전문서라고 판단을 하면 쿼크 모드(quirks mode)로 렌더링을 하게 되며 이 모드에서는 이전 세대의 브라우저에 맞는 비표준적 방법의 CSS를 적용한다.<br><br>즉 쿼크모드의 목적은 오래된 웹페이지들이 최신 버전의 브라우저에서 깨져 보이지 않으려는 것에 있습니다.</strong></li></ul><blockquote><p><strong>XML과 XHTML의 다른 점은 무엇인가요</strong></p></blockquote><ul><li><strong>XML은 드라이버 하드웨어, 운영 체제 및 다양한 응용 프로그램 간에 데이터를 전송하도록 설계 된 마크업언어지만<br>XHTML은 XML의 강점을 HTML과 결함한 언어입니다.</strong></li></ul><blockquote><p><strong>application/xhtml+xml으로 지정한 페이지에 어떠한 문제가 있나요?</strong></p></blockquote><ul><li><strong>ie11 하위 버전에서는 XHTML을 제대로 지원하지 않습니다.<br><br>XHTML의 XML 기능을 사용하기 위한 필수 요구 조건인 application/xhtml+xml MIME 타입을 인식하지 못합니다.</strong></li></ul><blockquote><p><strong>다국어 페이지를 제공하는 여러 방법에 관해 설명해주세요.</strong></p></blockquote><ul><li><strong>지원하는 방법은 크게 3가지 입니다.<br>첫 번째는 템플릿 페이지를 언어별로 작성하여 보여주는 방법, 두 번째는 data-* 속성을 이용하여 언어별 텍스트를 배열로 만들고 처리하는 방법,<br>마지막으로 i18n 라이브러리를 사용 하는 방법입니다.</strong></li></ul><blockquote><p><strong>data-속성은 무엇을 하는 것인가요? 사용했을 때 이점은 무엇인가요?</strong></p></blockquote><ul><li><strong>HTML5에서 새로 추가된 data- 속성은 커스텀 데이터 속성으로, 개발자가 임의로 이름을 붙일 수 있는 속성입니다. data- 속성은 html 태그 상에서 별다른 작용을 하지 않습니다. 자바스크립트가 DOM의 데이터에 접근하거나 서버에서 받아온 데이터를 활용해야 할 때 사용됩니다.</strong></li></ul><blockquote><p><strong>HTML5를 오픈 웹 플랫폼(open web platform)으로 생각해본다면, 어떤 것들로 구성돼 있을까요?</strong></p></blockquote><ul><li><strong>시멘틱 마크업, 미디어 핸들링을 위한 내장 플렛폼, application API, 오프라인 핸들러</strong></li></ul><blockquote><p><strong>쿠키(Cookies)와 세션저장소(sessionStorage)와 로컬저장소(localStorage)의 차이점을 설명해주세요.</strong></p></blockquote><ul><li><strong>쿠키(Cookie), 세션 저장소(sessionStorage), 로컬 저장소(localStorage)는 브라우저에 데이터를 저장하기 위한 공간들입니다.<br>HTML5 이전에는 쿠키를 주로 사용했습니다. 하지만 쿠키는 많은 양의 데이터를 저장할 수 없고, 동일한 도메인에 페이지를 요청할 때마다 서버로 함께 전송되며, 변조가 쉬워 보안이 취약합니다.<br>그래서 HTML5부터는 저장소 객체(Storage object)를 정의하고 있습니다.<br>저장소 객체는 세션 저장소(sesssionStorage)와 로컬 저장소(localStorage) 두 가지가 있습니다.<br>두 가지 모두 키-값의 형태로 보존되며 string 값으로 저장되기 때문에 실제 Javascript에서 사용하려면 파싱 과정을 거쳐야 합니다.<br>localStroage에 데이터를 자장하면 창이나 탭을 닫아서 세션이 종료돼도 데이터가 보존됩니다.<br>반면에 sessionStorage는 페이지 세션이 만료되면 데이터도 파기됩니다.</strong></li></ul><blockquote><p><strong><code>&lt;script&gt;</code>, <code>&lt;script async&gt;</code>와 <code>&lt;script defer&gt;</code>의 차이점에 관해 설명해주세요.</strong></p></blockquote><ul><li><strong>일반적으로 브라우저는 <code>&lt;script&gt;</code> 태그를 만나면 웹 페이지 렌더링을 잠시 중단하고 script를 해석한 후 실행합니다.<br>따라서 사이즈가 크거나 복잡한 script을 가져올 경우 브라우저가 느려지는 단점이 있습니다.<br>하지만 async와 defer 키워드를 사용하게 되면 브라우저 렌더링과 동시에 스크립트를 내려받습니다.<br>여기서 async와 defer의 차이점은 async의 경우 script를 내려받는 즉시 실행하며 defer는 렌더링이 완료된 후 실행합니다.</strong></li></ul><blockquote><p><strong>CSS<link>를 <code>&lt;head&gt;&lt;/head&gt;</code> 사이에 쓰는 것과 JS<code>&lt;script&gt;</code> 를 <code>&lt;body&gt;&lt;/body&gt;</code> 뒤에 사용하는 것은 좋은 사용법일까요? 어디에 배치하는 게 좋을까요?</strong></p></blockquote><ul><li><strong>이전 포스트에서 설명했듯이 css 는 head태그 안에, JS는 body 하단에 표시해야합니다. 그 이유는 브라우저가 DOM해석하고 렌더링 하면서 CSS명세를 적용하여 렌더링합니다.<br>이때 JS를 만나게 되면 렌더링을 잠시 멈추고 JS를 다운 받아실행하게 됩니다. 이러한 성능저하 현상을 줄이기 위해 body 최 하단에 JS를 배치하면 렌더링이 대부분 완료되고<br>JS를 다운받아 실행하기 때문에 사용자 입장에서 성능 저하를 느낄 수 없게 됩니다.</strong></li></ul><blockquote><p><strong>Progressive rendering이란 무엇인가요?</strong></p></blockquote><ul><li><strong>Progressive rendering은 이름 그대로 가능한 빨리 웹의 컨텐츠를 그리기 위한 기술입니다.<br>대표적으로 이미지 Lazy-loading과 같은 기술이 있습니다.</strong></li></ul><blockquote><p><strong>이미지 태그에 srcset 속성을 사용하는 이유는 무엇인가요? 브라우저가 이 속성을 가진 콘텐츠를 평가할 때 사용하는 과정을 설명해보세요.</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;small.jpg&quot;</span><br><span class="line">     srcset=&quot;large.jpg 1024w, medium.jpg 640w, small.jpg 320w&quot;</span><br><span class="line">     sizes=&quot;(min-width: 36em) 33.3vw, 100vw&quot;</span><br><span class="line">     alt=&quot;A rad wolf&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>화면 해상도에 따라서 이미지를 제공하기 위한 속성입니다.<br>위 코드에서와 같이 1024w는 이미지의 실제사이즈를 의미하며 화면의 width에 따라 브라우저가 각기 다른 이미지를 보여주게 됩니다.</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;프론트엔드 면접은행 - HTML관련 질문 정리&lt;br&gt;
    
    </summary>
    
      <category term="인터뷰 문제은행" scheme="http://yoursite.com/categories/%EC%9D%B8%ED%84%B0%EB%B7%B0-%EB%AC%B8%EC%A0%9C%EC%9D%80%ED%96%89/"/>
    
    
      <category term="FrontEnd" scheme="http://yoursite.com/tags/FrontEnd/"/>
    
      <category term="Interview" scheme="http://yoursite.com/tags/Interview/"/>
    
      <category term="Question" scheme="http://yoursite.com/tags/Question/"/>
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Front-End Interview Question - Normal Question</title>
    <link href="http://yoursite.com/2018/07/31/front-end-interview-nomal-question/"/>
    <id>http://yoursite.com/2018/07/31/front-end-interview-nomal-question/</id>
    <published>2018-07-31T01:14:00.000Z</published>
    <updated>2018-08-11T16:38:38.605Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p><h1 id="프론트-엔드-면접은행"><a href="#프론트-엔드-면접은행" class="headerlink" title="[프론트 엔드 면접은행]"></a>[프론트 엔드 면접은행]</h1><p>곧 있을 면접과 앞으로의 프론트엔드 면접을 위하여 <strong>프론트엔드 면접 문제 은행</strong>의 질문들을 개인적으로 정리하려 한다. <br><br>참조한 곳은 <a href="https://github.com/h5bp/Front-end-Developer-Interview-Questions" target="_blank" rel="noopener">https://github.com/h5bp/Front-end-Developer-Interview-Questions</a> 이곳이며, 한국어 버전이 번역되어 git에 올라가 있다. <br><br>(<a href="https://github.com/h5bp/Front-end-Developer-Interview-Questions/tree/master/Translations/Korean#js-%EA%B4%80%EB%A0%A8-%EC%A7%88%EB%AC%B8" target="_blank" rel="noopener">https://github.com/h5bp/Front-end-Developer-Interview-Questions/tree/master/Translations/Korean#js-%EA%B4%80%EB%A0%A8-%EC%A7%88%EB%AC%B8</a>)</p><p>일반적인 질문부터 HTML, CSS, Javascript에 대한 Front-End 전반적인 질문들에 대한 답을 적어보려 한다. 질문에 대한 답변은 계속해서 업데이트 할 예정이다.<br></p><hr><blockquote><p><strong>어제/이번 주에 무엇을 공부하셨나요?</strong></p></blockquote><ul><li><strong>이번주에는 Javascript Prototype에 대하여 공부하고 정리하였습니다.<br><br>Prototype에 대해 간단하게 설명하면 우리가 일반적으로 이야기 하는 Javascirpt Prototype은 Prototype Link와 Prototype Object로 구성되어 있으며, Prototype Link는 하위 객체가 참조하는 상위객체를 일컫고, Prototype Object는 자신을 복제할 하위 객체가 참조할 Object, 즉 분신입니다.</strong></li></ul><blockquote><p><strong>코딩을 할 때 당신을 들뜨게 하거나 흥미를 끄는 것들은 무엇은 가요?</strong></p></blockquote><ul><li><strong>새로운 기술과 이를 적용하여 프로젝트를 구현하고 눈으로 확인했을 때 가장 흥미를 느낍니다.</strong></li></ul><blockquote><p><strong>최근에 당신이 경험한 기술적인 문제는 무엇이고 그것을 어떻게 해결했나요?</strong></p></blockquote><ul><li><strong>가장 최근에 진행한 Vue.js로 구현한 빙고 페이지에서 페이지 렌더링을 하는 도중 에러가 발생하였습니다.<br><br>에러가 발생한 이유는 데이터를 받아오는 시점에서 일반적인 RESTFul API가 아닌 Android Interface를 통해 데이터를 받아오기 때문에 시점에 대한 이슈가 발생하였습니다.<br><br>이를 해결하기 위해 Javascript Event Dispatcher를 사용하여 데이터를 주고받았고, async / await를 사용하여 동기화처리를 함으로서 렌더링 이슈를 해결하였습니다.</strong></li></ul><blockquote><p><strong>웹 애플리케이션이나 사이트를 만들 때 고려해야 할 UI, Security, Performance, SEO, Maintainability에 대해서 설명해주세요.</strong></p></blockquote><ul><li><p><strong>UI : PC용 웹사이트와 모바일 사이트를 하나의 도메인에서 서비스하려면 반응형 디자인으로 페이지를 구현합니다. 또는 두개의 도메인을 구분하려면 PC용, Mobile용을 따로 디자인하여 퍼블리싱하면 됩니다.<br></strong></p></li><li><p><strong>Security : 제가 진행했던 보안적인 처리는 SPA내에서 DOM에 직접적으로 접근하지 않고, 각 FE프레임워크 또는 라이브러리(Angular, React, Vue.js)에서 권장하는 방식으로 접근하는 것입니다. <br><br>두번 째 방법은 입력 폼 양식에 대하여 유효성 체크를 FrontEnd와 BackEnd 둘다 처리합니다. 이렇게 했을 때 invalild Data나 잘못된 파일이 업로드 되었을 때의 피해를 최소화 할 수 있습니다. <br><br>마지막으로 페이지에 대한 router를 auth처리하여 인증된 사용자만 접근할 수 있도록 구분하는 것입니다. 이렇게 하였을때 무분별하게 페이지접근이나 요청을 막을 수 있습니다.<br><br>추가로 LocalStorage대신 sessionStorage를 사용하는 것도 좋은 방법입니다.<br></strong></p></li><li><p><strong>Performance : FrontEnd에서 성능향상을 위하여 기본적으로는 우선 style태그는 <head>태그 내에, script태그는 </head><body> 최하단에 배치시키는 것입니다. 이렇게 하는 이유는 브라우저에의해 DOM이 생성되고 렌더링 되면서 우선적으로는 style이 적용되어야 하고, script는 마지막에 불려와 로직이 적용되어야 하기 때문입니다.<br><br>두번째 방법은 FE프레임워크마다 다르겠지만 우선 Virtual DOM을 사용하는 것입니다. Angular의 경우 Virtual DOM을 기본스펙으로 제공하지 않기 때문에 페이지를 리플로우 / 리드로우 할때 체감상 상당히 느리게 느껴집니다. 그러나 Vue.js의 경우 Virtual Dom을 사용하기 때문에 리플로우 / 리드로우 시간을 최소화 할 수 있습니다. <br><br>마지막으로 프로젝트를 완료 후 빌드할 때에는 공통적으로 Uglify, Minify, Gzip 프로세스를 추가하여 브라우저에서 JS나 CSS를 로드할 때의 시간을 최소화하면 성능향상을 기대 할 수 있습니다.<br></body></strong></p></li><li><p><strong>SEO : 검색엔진 최적화를 위하여 <code>&lt;title&gt;</code> 태그와 <code>&lt;meta&gt;</code> 태그들에 대한 정보를 모두 입력합니다.<br><br>또한 Robot.txt를 사용합니다.<br><br><code>&lt;a&gt;</code> 태그를 사용합니다.</strong></p></li><li><p><strong>Maintainability : 코드 컨벤션을 정의합니다. 이는 팀원들간의 유지보수을 쉽고 빠르게 유지할 수 있습니다. 간단하게는 네이밍 부터 HTML, CSS, Javascript까지 정의합니다. linter를 사용합니다. 여러 종류의 linter가 있지만 린터를 사용하였을 때 유지보수가 용이해지고 코트의 품질이 올라갑니다.</strong></p></li></ul><blockquote><p><strong>선호하는 개발 환경에 대해 자유롭게 이야기해 주세요.</strong></p></blockquote><ul><li><strong>기존 경력동안 사용한  OS는 MAC 이며 IDE는 WebStorm입니다.</strong></li></ul><blockquote><p><strong>버전 관리 시스템은 어떤 것들을 사용해보셨습니까?</strong></p></blockquote><ul><li><strong>git과 BitBucket를 주로 사용하였습니다.</strong></li></ul><blockquote><p><strong>당신이 웹 페이지를 만들 때의 과정을 설명해주실 수 있을까요?</strong></p></blockquote><ul><li><strong>기획과 디자인이 모두 완료된 상태에서 첫 작업은 퍼블리싱입니다. 퍼블리싱을 작업하여 반응형일 경우 모바일과 PC버전의 화면을 체크하고 MockData를 삽입하여 실제 데이터가 표시 된 것처럼 작업합니다. 이후 로직단을 작업하여 RESTFul API를 통해 데이터를 가져오거나 추가 로직을 입힙니다. 이후 UI와 로직 모두 테스팅을 진행하며 시나리오 대로 페이지가 동작하는지 확인합니다.</strong></li></ul><blockquote><p><strong>당신에게 5가지 다른 stylesheet가 있습니다. 어떤 방법으로 사이트에 제공하는 게 가장 효과적일까요?</strong></p></blockquote><ul><li><strong>(질문자의 의도를 모르겠음)<br><br>사용자 분석을기반으로 각각 다른 스타일을 제공하면 좋을 것 같습니다.</strong></li></ul><blockquote><p><strong>점진적 향상법(progressive enhancement)과 우아한 성능저하법(graceful degradation)의 차이를 설명하실 수 있습니까?</strong></p></blockquote><ul><li><strong>점진적 향상법은 많은 테스팅을 통해 기능을 점진적으로 향상시키는 것을 의미하며 우아한 성능저하법은 최신기기에서 동작하는 기능을 만들고 난 다음에 오래된 기기에서 동작할 수 있도록 다른 버전을 두어 관리 또는 만드는 것을 의미합니다.</strong></li></ul><blockquote><p><strong>브라우저가 한 번에 1개의 도메인에서 내려받는 자원은 몇 개인가요?</strong></p></blockquote><ul><li><strong>이번 질문을 보고 공부하게된 내용입니다.<br>브라우저마다 다르겠지만 평균 6~8개의 리소스를 동시에 받을 수 있습니다.</strong></li></ul><blockquote><p><strong>페이지 로드 시간을 줄이는 세 가지 방법에 관해서 이야기 해 보세요.</strong></p></blockquote><ul><li><strong>css Image Spirte를 사용합니다. 또한 js 파일을 minify, uglify하여 하나의 파일로 로드합니다. gzip을 사용합니다. 캐싱을 적용합니다.</strong></li></ul><blockquote><p><strong>당신이 프로젝트에 합류했습니다. 근데 그들은 Tab을 이용하고, 당신은 Space를 사용했습니다. 어떻게 하실 건가요?</strong></p></blockquote><ul><li><strong>팀의 코드 컨벤션을 유지합니다. 제가 우선시하는 것은 개인적인 성향보다는 팀원들간의 커뮤니케이션이고 다른 사람의 코드를 볼때 빠른 이해가 중요합니다. 이를 위해 Tab이 서로간에 코드를 이해하는 것이 빠르다면 Tab을 사용할 것입니다. 어차피 빌드되면 다 똑같이 때문에 퍼포먼스와 같은 결과는 크게 차이나지 않을 것입니다.</strong></li></ul><blockquote><p><strong>간단한 Slideshow 페이지를 만드는 방법에 관해서 이야기해 보세요.</strong></p></blockquote><ul><li><strong>position: absolute; left: width; 를 기반으로 모든 페이지를 좌측으로 정렬 시키고, 자바스크립트로 left 값을 변경하는 식.<br>직접 스타일을 조작하는데 리플로우, 리드로우와 같이 퍼포먼스 문제가 있다면 CSS3 transform을 사용합니다.</strong></li></ul><blockquote><p><strong>만약 당신이 올해 기술적 책임자가 되었다면 무엇을 먼저 하시겠습니까?</strong></p></blockquote><ul><li><strong>팀내의 코드컨벤션을 정의 하겠습니다. 서로간의 코드를 이해하기 쉽고 유지보수가 용이해지도록 하기 위해서 입니다. 또한 페어 프로그래밍을 시도해 보고 싶습니다. 페어프로그래밍을 도입함으로서 코드를 작성한 개발자에게 모든 책임을 전가하는 것이 아닌 위급한 상황에서도 누구나 코드를 수정할 수 있도록 해야 합니다.</strong></li></ul><blockquote><p><strong>표준의 중요성에 관해 설명해주세요.</strong></p></blockquote><ul><li><strong>표준을 정의함으로서 팀원들 간에는 서로의 코드를 이해하고 수정하는 시간을 줄일 수 있다. 또한 코드를 작성한 개발자가 사정이 생기더라도 표준에의한 코딩을 함으로서 쉽게 다른 개발자가 코딩을 할 수 있게한다.</strong></li></ul><blockquote><p><strong>Flash of Unstyled Content에 관해 설명해주세요. 또 FOUC를 피하기 위해선 어떻게 해야 하나요?</strong></p></blockquote><ul><li><strong>기본적으로 CSS는 렌더링 차단 리소스로 취급된다. 즉 CSSOM이 생성될 때까지 브라우저는 처리되는 모든 콘텐츠를 로딩하지 않는다. 예를 들어 @import(참조된 CSS)를 사용하거나 자바스크립트로 인한 DOM 구조가 변결될때 FOUC가 발생한다.<br><br>이를 해결하기 위해 기본적으로는 <head>태그 안에 CSS를 링크하고 @import사용을 자제한다. 또한 자바스크립트의 순서를 바꿔주거나 특정 상황에서 FOUC가 발생하는 경우 미디어쿼리를 통해 처리 할 수 있다. (결론 : 클라이언트에서 최대한 빠르게 CSS를 다운로드하여 렌더링 해야함)</head></strong></li></ul><blockquote><p><strong>ARIA와 screenreader에 대해 설명해주세요</strong></p></blockquote><ul><li><strong>ARIA는 (Accessible Rich Internet Applications) 즉 웹 어플리케이션을 작성할 때 장애인을 위한 접근성 향상 방법을 정의한것.<br><br>screenreader는 시각장애인이 컴퓨터를 사용할 때 나타나는 정보들을 음성으로 출력해주는 프로그램이다.</strong></li></ul><blockquote><p><strong>CSS 애니메이션과 JavaScript 애니메이션의 차이점에 관해 설명해주세요</strong></p></blockquote><ul><li><strong>UI 요소 상태 전환과 같은 간단한 ‘원샷(one-shot)’ 전환에 CSS 애니메이션을 사용합니다. <br><br>바운스, 중지, 일시 중지, 되감기 또는 감속과 같은 고급 효과를 원할 경우에 자바스크립트 애니메이션을 사용합니다.<br><br>자바스크립트로 애니메이션을 만드는 경우, 자신에게 익숙한 Web Animations API 또는 최신 프레임워크를 사용합니다.<br></strong></li></ul><blockquote><p><strong>CORS는 무엇의 약자이고 어떤 문제에 대해서 언급하는 것인가요?</strong></p></blockquote><ul><li><strong>CORS는 Cross Origin Resource Sharing으로 다른 도메인에서 리소스를 공유할 수 있음을 의미한다. 기본적으로 스크립트는 Same Origin Policy에 의해 HTTP Request가 불가능하나 CORS를 허용하게 된다면 다른 도메인으로 HTTP Request가 가능해진다는 뜻이다. 이를 해결하기 위해선 여러가지 방법이 있는데, JSONP방식을 사용하거나 서버측에서 Access control을 허용하도록 설정해주면 된다.</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;곧 있을 면접과 앞으로의 프론트엔드 면접을 위하여 프론트엔드 면접 문제 은행의 질문들을 개인적으로 정리하려 한다.&lt;br&gt;
    
    </summary>
    
      <category term="인터뷰 문제은행" scheme="http://yoursite.com/categories/%EC%9D%B8%ED%84%B0%EB%B7%B0-%EB%AC%B8%EC%A0%9C%EC%9D%80%ED%96%89/"/>
    
    
      <category term="FrontEnd" scheme="http://yoursite.com/tags/FrontEnd/"/>
    
      <category term="Interview" scheme="http://yoursite.com/tags/Interview/"/>
    
      <category term="Question" scheme="http://yoursite.com/tags/Question/"/>
    
  </entry>
  
  <entry>
    <title>Javascript Prototype</title>
    <link href="http://yoursite.com/2018/07/30/javascript-prototype/"/>
    <id>http://yoursite.com/2018/07/30/javascript-prototype/</id>
    <published>2018-07-29T15:00:00.000Z</published>
    <updated>2018-08-11T16:39:03.346Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p><h1 id="자바스크립트-프로토타입"><a href="#자바스크립트-프로토타입" class="headerlink" title="[자바스크립트] 프로토타입"></a>[자바스크립트] 프로토타입</h1><p>자바스크립트는 프로토타입 기반 언어이다. 또한 객체지향 언어이기도 하다. 그러나 자바스크립트는 클래스 기념이 없다. 대신에 프로토타입(Prototype)이 존재한다.</p><p>클래스 개념이 없으니 기본적으로 상속기능도 없으며 보통 프로토타입을 기반으로 상속을 흉내내어 사용한다.<br><br>javascript는 <strong>프로토타입을 이용한 클로닝(Cloning)과 객체특성을 확장해 나가는 방식을 통해 새로운 객체를 생성하게 된다.</strong><br><br>(참고로 ESMA6 표준에서는 Class 문법이 추가되었다. 하지만 문법이 추가 된 것이지 클래스 기반으로 바뀐 것이 아니다. 여전히 Prototype기반이다)</p><h2 id="자바스크립트의-프로토타입-Prototype-이란"><a href="#자바스크립트의-프로토타입-Prototype-이란" class="headerlink" title="자바스크립트의 프로토타입(Prototype)이란?"></a>자바스크립트의 프로토타입(Prototype)이란?</h2><p>자바스크립트에서는 <strong>Prototype Link</strong>와 <strong>Prototype Object</strong> 가 존재한다. 그리고 이 둘을 통틀어 <strong>Prototype</strong>이라 부른다.</p><p><strong>Prototype Link :</strong>  객체가 생성될 때 조상이었던 함수의 Prototype Object를 가리키며 객체안에서  <strong><strong>proto</strong></strong>  가 바로 그것이다.</p><p><strong>Prototype Object :</strong> 자기 자신이 <code>분신</code> 이며 자신을 원형으로 만들어질 다른 객체가 참조할 프로토타입이 된다. 즉 객체 자신을 이용할 다른 객체들이 프로토타입으로 사용할 객체가 <strong>Prototype Object</strong> 가 되는 것이다.</p><p>아래 예제를 살펴보자</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1    var A = function () &#123; &#125;;</span><br><span class="line">2    A.x=function() &#123;</span><br><span class="line">3        console.log(&apos;hello&apos;);</span><br><span class="line">4    &#125;;</span><br><span class="line">5    A.prototype.x = function () &#123;</span><br><span class="line">6        console.log(&apos;world&apos;);</span><br><span class="line">7    &#125;;</span><br><span class="line">8    var B = new A();</span><br><span class="line">9    var C = new A();</span><br><span class="line">10</span><br><span class="line">11    B.x();</span><br><span class="line">12    &gt; world</span><br><span class="line">13    C.x();</span><br><span class="line">14    &gt; world</span><br></pre></td></tr></table></figure><p>B, C를 생성하기 위한 객체 원형 프로토타입은 A이다. 하지만 여기서 반드시 집고 넘어가야 하는 사실은 B,C는 A를 프로토타입으로 사용하기 위해 A의 <strong>Prototype Object</strong>를 사용한다는 것이다.<br><br>그리고 이 <strong>Prototype Object</strong>는 A가 생성될 당시의 정보 <code>var A = function () { };</code>는 비어있는 객체상태이기 때문에 A.x가 적용되지 않아 ‘hello’가 출력되지 않는다.<br><br>그러나 A.prototype.x를 통해 접근하게 되면 B,C 모두 A의 <strong>Prototype Object</strong> 를 참조하기 때문에 위의 결과에서 ‘world’ 가 출력되는 것이다.</p><p>위 예제를 상속모델 그림으로 표현하면 다음과 같다.<br><div class="figure center" style="width:100%;"><a class="fancybox" href="relation2.png" title="상속모델 표현도" data-caption="상속모델 표현도" data-fancybox="javascript"><img class="fig-img" src="relation2.png" style="width:100%;height:100%;" alt="상속모델 표현도"></a><span class="caption">상속모델 표현도</span></div><div style="clear:both;"></div></p><p>그림과 코드를 함께 보도록 하자.<br><br>코드의 첫 번째 줄에서 A Object가 생성되면서 A에 대한 <strong>Prototype Object</strong>가 생성된다.<br>(자기 자신의 분신이 생성된다)<br><br>그림에선 가운데의 A 객체가 생성되고 그 아래 A에 대한 <strong>Prototype Object</strong>가 만들어지며 A 객체는 <strong>A Prototype Object</strong>를 가리킨다.<br>또한 <strong>A Prototype Object</strong>안의 Constructor를 보면 A 객체를 가리키고 있다. 즉 자신의 원형이 A객체라는 뜻이다.</p><p>2~4라인에서 A 객체의 속성 x에 함수를 대입하였다. 그림에서도 A 객체에 x속성이 추가된 것을 확인 할 수 있다.</p><p>5~7라인에서 <strong>A Prototype Object</strong>에 직접적으로 접근하여 함수를 할당하였다. 그림에서도 <strong>A Prototype Object</strong> 에 x속성이 존재하는 것을 확인 할 수 있다.</p><p>8~9라인에서는 A 객체를 기반으로 B, C객체를 만들었다. 자바스크립트는 프로토타입 기반이기 때문에 A 객체가 아니라 <strong>A Prototype Object</strong>를 참조하여 B, C 객체가 만들어지게 되는 것이다. 즉 그림에서 처럼 B, C객체는 <strong>A Prototype Object</strong>를 링크하게 된다.</p><p>이후 10, 12라인에서 B.x()와 C.x()를 호출하게되면 A객체의 x속성이 아니라 프로토타입기반으로 B,C가 생성되었으므로 <strong>A Prototype Object</strong> 의 x가 공유되어 ‘hello’가 아닌 ‘world’가 출력된다.</p><h2 id="자바스크립트의-프로토타입-체인-Prototype-Chain"><a href="#자바스크립트의-프로토타입-체인-Prototype-Chain" class="headerlink" title="자바스크립트의 프로토타입 체인(Prototype Chain)"></a>자바스크립트의 프로토타입 체인(Prototype Chain)</h2><p>프로토타입 체인이란 <strong>프로토타입을 상속해서 만들어지는 객체들간의 연관관계를 의미</strong> 한다. 위쪽 설명에서 <strong><strong>proto</strong></strong>는 <strong>Prototype Link</strong>를 의미하며 이를 따라 올라가보면 <strong>Object</strong> 객체의 <strong>Prototype Object</strong>에 다다른다.<br><br>그렇기 때문에 자바스크립트의 모든 객체는 <strong>Object</strong>객체로부터 파생된 자식들이며 기본적인 <strong>Object Prototype</strong>의 내장함수들이 자식들에게도 공유되는 것이다.(toString, hasOwnProperty등)</p><p>이러한 프로토타입 체인은 하위 객체에서 상위 객체의 프로퍼티와 메소드를 상속받는다. 사실 상속이 아니라 <strong>공유</strong>하고 있는 것이다.</p><p>아래의 예제를 살펴보자<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1   var A = function () &#123; &#125;;</span><br><span class="line">2   A.prototype.x = function () &#123;</span><br><span class="line">3       console.log(&apos;hello&apos;);</span><br><span class="line">4   &#125;;</span><br><span class="line">5   var B = new A();</span><br><span class="line">6   var C = new A();</span><br><span class="line">7</span><br><span class="line">8   B.x();</span><br><span class="line">9   &gt; hello</span><br><span class="line">10</span><br><span class="line">11  C.x();</span><br><span class="line">12  &gt; hello</span><br><span class="line">13</span><br><span class="line">14  A.prototype.x = function () &#123;</span><br><span class="line">15  console.log(&apos;world&apos;);</span><br><span class="line">16  &#125;;</span><br><span class="line">17</span><br><span class="line">18  B.x();</span><br><span class="line">19  &gt; world</span><br><span class="line">20</span><br><span class="line">21  C.x();</span><br><span class="line">22  &gt; world</span><br></pre></td></tr></table></figure></p><div class="figure center" style="width:100%;"><a class="fancybox" href="relation3.png" title="상속모델 표현도" data-caption="상속모델 표현도" data-fancybox="javascript"><img class="fig-img" src="relation3.png" style="width:100%;height:100%;" alt="상속모델 표현도"></a><span class="caption">상속모델 표현도</span></div><div style="clear:both;"></div><p>위쪽에서 살펴보았던 예제와 비슷하다. 객체 A를 만들고 A의 <strong>Prototype Object</strong>에 x 속성을 추가하였다. 이후 B, C객체는 <strong>A의 Prototype Object</strong>를 참조하였다.<br><br>5~12라인에서 B,C 객체를 만들고 x속성을 호출하게 된다. 그러나 B,C객체에는 x속성이 없다.<br><br>따라서 프로토 타입 체이닝에 의해 상위 객체의 속성을 찾게 되며 즉,<br><strong>A의 Prototype Object</strong>에 있는 x을 찾아 ‘hello’가 출력된다.<br><br>이러한 방법으로 만약 찾으려는 x가 없는 경우 계속해서 상위객체를 찾는다.<br><br>상위객체를 참조하여도 해당 속성이 없다면 마지막에는 <strong>Object의 Prototype</strong> 객체까지 올라가게 된다.<br>그래도 없다면 undefiend를 리턴하게 된다.</p><hr><p>이번 공부 내용을 통해 그동안 뜬구름만 잡았던 프로토타입에 대해 깊숙하게 이해 할 수 있었다.</p><h2 id="참조링크"><a href="#참조링크" class="headerlink" title="참조링크"></a>참조링크<br></h2><p><a href="https://medium.com/@bluesh55/javascript-prototype-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-f8e67c286b67" target="_blank" rel="noopener">Javascript  프로토타입 이해하기 – 오승환 – Medium</a><br><br><a href="http://insanehong.kr/post/javascript-prototype/" target="_blank" rel="noopener">Javascript 기초 - Object prototype 이해하기 |  Insanehong’s Incorrect Note</a></p>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Javascript Prototype에 대해 정리해보았다.&lt;br&gt;
    
    </summary>
    
      <category term="Javascript" scheme="http://yoursite.com/categories/Javascript/"/>
    
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
      <category term="Prototype" scheme="http://yoursite.com/tags/Prototype/"/>
    
  </entry>
  
  <entry>
    <title>Codiliy Lesson 1 Iteration</title>
    <link href="http://yoursite.com/2018/07/26/codility-lesson-01/"/>
    <id>http://yoursite.com/2018/07/26/codility-lesson-01/</id>
    <published>2018-07-25T15:00:00.000Z</published>
    <updated>2018-08-11T16:59:23.924Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p><h1 id="Codility-Lesson-1-Iteration"><a href="#Codility-Lesson-1-Iteration" class="headerlink" title="Codility Lesson 1 Iteration"></a>Codility Lesson 1 Iteration</h1><p>코딩테스트를 위해 오늘 부터 알고리즘 문제를 풀어보려 한다. 우선 <strong>Codility</strong> 사이트의 테스트 문제들을 풀어봤는데 생각보다 어렵다;;;<br><br>테스트 문제는 완료하지도 못한채로 제출을 해버렸다..<br><br></p><p>오늘부터 <strong>Codility</strong> 사이트의 Lession 문제들을 차근차근 풀어보려 한다. 더불어 예전에 조금 깨작? 거렸던 Cordwars도 풀어볼 것이다.<br>개인적으로 알고리즘 문제를 풀 땐 연습장에 직접 써보면서 풀어가는데, 채용시 코테에서 연습장을 쓸 수 있을지는 의문이다. 이때문에 컴퓨터 상에서 풀어보는 연습도 필요하다.<br><br><br>그리고 <strong>Codility</strong>의 경우 run task를 할 경우 테스트 케이스의 결과만 보여주기 때문에 내부에서 어떻게 돌아가는지 파악하기 어렵다…<br><br>그래서 찾아낸 방법은 jsFiddle로 코드를 작성하면서 컴파일을 돌리고, 결과 코드를 복붙! 하면 좀 더 시간을 단축 시킬 수 있을 것 같다.<br><br>오늘 부터 한 문제씩 업로드 하고 내가 풀었던 코드들도 같이 올릴 것이다.<br></p><h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><hr><p>A binary gap within a positive integer N is any maximal sequence of consecutive zeros that is surrounded by ones at both ends in the binary representation of N.</p><p>For example, number 9 has binary representation 1001 and contains a binary gap of length 2. The number 529 has binary representation 1000010001 and contains two binary gaps: one of length 4 and one of length 3. The number 20 has binary representation 10100 and contains one binary gap of length 1. The number 15 has binary representation 1111 and has no binary gaps. The number 32 has binary representation 100000 and has no binary gaps.</p><p>Write a function:</p><p>function solution(N);</p><p>that, given a positive integer N, returns the length of its longest binary gap. The function should return 0 if N doesn’t contain a binary gap.</p><p>For example, given N = 1041 the function should return 5, because N has binary representation 10000010001 and so its longest binary gap is of length 5. Given N = 32 the function should return 0, because N has binary representation ‘100000’ and thus no binary gaps.</p><p>Assume that:</p><p>N is an integer within the range [1..2,147,483,647].<br>Complexity:</p><p>expected worst-case time complexity is O(log(N));<br>expected worst-case space complexity is O(1).</p><hr><p>문제해설 : 주어진 Integer N이 있고, 이를 이진수로 변환하였을 때 1과 1사이의 0의 갯수를 gap이라 한다.<br><br>예를 들어 9는 이진수로 1001이며 gap의 길이는 2가 된다.<br><br>숫자 529의 경우 이진수로 1000010001이며 이 경우에는 gap이 4와 3이다.<br><br><br>function solution(N);<br><br>함수 solution에서 N이 파라미터로 주어졌을 때 가장 긴 gap값을 찾아라.<br><br>단 gap이 존재하지 않을 경우 0을 리턴해야 한다. 예를들어 N = 32인 경우 이진수로 100000이며 이때의 gap은 0이다.<br><br><br>N은 [1..2,147,483,647]의 범위 값을 가진다.<br><br><br>복잡도 :<br><br>최악의 시간 복잡도 케이스는 O(log(N)) 이다. <br><br>최악의 공간 복잡도 케이스는 O(1) 이다.<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solution</span>(<span class="params">N</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> binaryValue = (N &gt;&gt;&gt; <span class="number">0</span>).toString(<span class="number">2</span>);</span><br><span class="line">  <span class="keyword">var</span> innerCount = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> gap = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt; binaryValue.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(binaryValue[i] == <span class="number">0</span>) &#123;</span><br><span class="line">      innerCount++;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(innerCount &gt; gap) &#123;</span><br><span class="line">      gap = innerCount;</span><br><span class="line">      &#125;</span><br><span class="line">  innerCount = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> gap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="답안-해설"><a href="#답안-해설" class="headerlink" title="답안 해설"></a>답안 해설</h2><blockquote><p>우선 주어진 값을 이진값으로 변환하기 위해 toString()을 사용하였다. 이때 인자로 들어간 <strong>‘2’</strong> 값은 optional인데 2일 경우 binary 문자열로 리턴해준다.</p><p>이렇게 변환된 binary문자열은 (해당 문자열의 길이 - 1) 만큼 반복문을 돌게된다.</p><p>각 인덱스 순서대로 값을 확인하면서, 값이 0일 경우, 반복되는 0의 갯수를 count하는<br>innerCount라는 값이 증가하게 되고 1일 경우 현재의 innerCount와 이전의 gap을 비교하여 현재의 innerCount, 즉 새로 count 된 gap이 클경우 이를 gap에 할당한다.</p><p>이후 innerCount는 초기화 되며 다시 gap을 찾기위해 count 한다.</p></blockquote><h2 id="실행결과"><a href="#실행결과" class="headerlink" title="실행결과"></a>실행결과</h2><div class="figure center" style="width:100%;"><a class="fancybox" href="codility_lesson1.png" title="Lesson 1 Codility Result" data-caption="Lesson 1 Codility Result" data-fancybox="codility"><img class="fig-img" src="codility_lesson1.png" style="width:100%;height:100%;" alt="Lesson 1 Codility Result"></a><span class="caption">Lesson 1 Codility Result</span></div><div style="clear:both;"></div>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Codility 사이트의 lesson을 한 단계씩 풀어가면서 이에 대한 문제와 해설을 포스팅 하려 한다.&lt;br&gt;
    
    </summary>
    
      <category term="코딩테스트" scheme="http://yoursite.com/categories/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
    
      <category term="이직" scheme="http://yoursite.com/tags/%EC%9D%B4%EC%A7%81/"/>
    
      <category term="코딜리티" scheme="http://yoursite.com/tags/%EC%BD%94%EB%94%9C%EB%A6%AC%ED%8B%B0/"/>
    
      <category term="코테" scheme="http://yoursite.com/tags/%EC%BD%94%ED%85%8C/"/>
    
  </entry>
  
  <entry>
    <title>이직을 준비하면서</title>
    <link href="http://yoursite.com/2017/07/25/blog-start/"/>
    <id>http://yoursite.com/2017/07/25/blog-start/</id>
    <published>2017-07-24T15:00:00.000Z</published>
    <updated>2018-08-11T15:59:54.600Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p><p>항상 이직을 결심하게 되면 하는 고민은 퇴사 후 이직을 준비할까? 이직 후 퇴사할까? 이다.<br><br><br>현재 드는 생각은 퇴사 후 이직을 하는게 맞는 것 같다. (챙길 식구가 없다면!) <br><br>마음이 떠나버린 상태에서 기존 직장의 일이 손에 잡힐 리 없다.<br><br>또한 이직시 준비해야 하는 것들(이력서, 포트폴리오, 코테등)은 업무시간 이외에 따로 준비하기에는 너무 벅차다.<br><br>예전에도 시도해봤지만 퇴근 후 피곤한 몸으로 이력서를 작성하고 주말에는 카페에 틀어박혀 이직 준비만 하였다.<br><br>차라리 편한 마음가짐으로 차분히 준비하는게 더 좋다고 생각하는 1인이다.<br><br>이전 직장에서 퇴사 할때 쯤 성급한 마음에 이력서를 후딱 작성해 버리고 눈여겨 봤던 여러 기업들에 지원했다. <br><br>결과는? 보기 좋게 많이~ 떨어졌다… <br><br>퇴사 후 지원했던 이력서를 다시 살펴보니 자기소개에 단락도 빠져있고, 경력 사항도 순서가 뒤죽박죽이다. <br><br>내가 채용담당자라도 슈퍼패스 할 것이다. <br><br><br>그래도 현재 시즌이 나를 돌아보면서 부족한부분을 채울 수 있는 좋은 기회라 생각한다. <br><br>프론트엔드 개발자이긴 하지만 아직 요즘 대세?인 리엑트도 해 보지 못했다. <br><br>Angular와 Vue는 할 줄 알지만 요즘 취업 깡패인 리엑트느님을 빠르게 공부해야겠다는 생각이 든다.<br><br><br>어제 강남의 모기업의 면접을 다녀왔다. <br><br>기업을 대상으로 채팅솔루션을 판매하는 업체인데, 2번째 직장에서 SI개발을 하면서 눈여겨 봤던 기업이었다. <br><br>Y Combinator로부터 투자도 받고 채팅 솔루션을 사용해 보면서 잘 정리된 코드도 마음에 들었다.<br><br>문제는 그 사람들이 나를 마음에 들어 하는가…<br><br><br>면접은 대략 1시간 정도 진행되었다. <br><br>여러가지 질문들이 오갔는데 대략적인 느낌은 ‘아 아직 부족하구나’이다. <br><br>처음엔 자기소개 부터 시작하였다. <br><br>자기소개는 보통 면접을 보러갈 때마다 대략적인 문맥만 준비해가는 편이다. <br><br>문맥만 알면 직접 즉흥적으로 하는게 더 편한거 같다.<br><br>자기소개를 하고 난 뒤 면접관님께서 아래의 질문들을 주셨다.<br></p><blockquote><p>css 에서 reset.css, nomalize.css를 사용해 보았나요?</p></blockquote><blockquote><p>웹 표준을 맞추기 위해 했던 경험들을 서술해 주세요</p></blockquote><blockquote><p>UI Framework를 사용해 보셨나요?</p></blockquote><blockquote><p>css box layout에 대해 설명해주세요</p></blockquote><blockquote><p>AngluarJS의 2-way 바인딩에 설명해 주세요</p></blockquote><blockquote><p>Vue.js를 사용한 경험을 설명해주세요</p></blockquote><blockquote><p>테스팅을 경험해 본적이 있으신가요?</p></blockquote><blockquote><p>webpack을 처음부터 사용해 보셨나요?</p></blockquote><p>대략 이정도 질문과 답변을 주고 받았다. <br><br>대답을 전부하지는 못했고 아는선에서 최대한 이야기 하려고 노력하였다. <br><br>특히 첫번째 질문은 듣자마자 갑자기 생각이 안 나서 멘붕이 왔다. <br><br>아무래도 웹표준과 퍼블리싱은 많이 부족함을 느낀 면접이었다.<br><br><br>현재는 마음이 좀 편하다. 리엑트, 웹팩, 함수형 프로그래밍, 웹 표준 등등 부족한 부분을 채워나가며 개인 프로젝트를 진행해 볼 생각이다.<br><br><br>P.S 이직을 준비하면서 블로그도 새로 시작하게 되었다. <br><br>github.io 도메인으로 jekyll기반에서 구현된 블로그이다. <br><br>매우 간단하게 설치 할 수 있고, 테마 적용도 쉬우며, 무엇보다도 마크다운으로 작성하면 <br><br> 내가 원하는 정적 웹사이트의 콘텐츠로 만들어 주기 때문에 바로 사용해 보았다. <br><br>결과는 대만족이다. <br><br>아직 사용해 보지 못한 분들에게 추천 드리고 싶다.<br></p>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;이직을 준비하면서 드는 생각을 정리해보았다.&lt;br&gt;
    
    </summary>
    
      <category term="취업" scheme="http://yoursite.com/categories/%EC%B7%A8%EC%97%85/"/>
    
    
      <category term="이직" scheme="http://yoursite.com/tags/%EC%9D%B4%EC%A7%81/"/>
    
      <category term="면접" scheme="http://yoursite.com/tags/%EB%A9%B4%EC%A0%91/"/>
    
  </entry>
  
</feed>
